{"version":3,"sources":["../src/components/OnboardingFlow.tsx","../src/components/WelcomePage.tsx","../src/components/Text.tsx","../src/components/OnboardingTopBar.tsx","../src/utils/isSafari.ts","../src/components/FaucetPage.tsx","../src/config.ts","../src/hooks/useBreakpoints.ts","../src/hooks/useFaucet.tsx","../src/components/SuccessPage.tsx","../src/components/OnboardingFlowProvider.tsx","../src/components/ThemeToggle.tsx"],"sourcesContent":["import { Box, Dialog, DialogContent, Stack } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nimport { WelcomePage } from \"./WelcomePage\";\nimport { OnboardingTopBar, CurrentStep } from \"./OnboardingTopBar\";\nimport { FaucetPage } from \"./FaucetPage\";\nimport { SuccessPage } from \"./SuccessPage\";\nimport { useBreakpoints } from \"src/hooks/useBreakpoints\";\nimport { useOnboardingFlowContext } from \"./OnboardingFlowProvider\";\nimport { useBalance, useWallet } from \"@fuels/react\";\n\ntype OnboardingFlowProps = {\n  container?: Element | (() => Element | null) | null;\n  welcomeMessage?: React.ReactNode;\n};\n\nexport const OnboardingFlow = ({ container, welcomeMessage }: OnboardingFlowProps) => {\n  const { openDialog } = useOnboardingFlowContext();\n  const [currentStep, setCurrentStep] = useState(CurrentStep.Welcome);\n  const { isMobile } = useBreakpoints();\n  const { wallet } = useWallet();\n  const { balance, refetch: refetchBalance } = useBalance({\n    address: wallet?.address.toString(),\n  });\n\n  useEffect(() => {\n    const interval = setInterval(refetchBalance, 500);\n    if (balance && balance.gt(0)) {\n      setCurrentStep(CurrentStep.Success);\n    }\n    return () => clearInterval(interval);\n  }, [balance]);\n\n  return (\n    <Dialog\n      fullScreen={isMobile}\n      container={container}\n      open={openDialog}\n      id=\"onboarding\"\n      PaperProps={{ className: \"p-8 w-full bg-zinc-200 dark:bg-black border-slate-600 border\" }}\n    >\n      <DialogContent>\n        <Stack spacing={4} className=\"items-center\">\n          <OnboardingTopBar currentStep={currentStep} />\n\n          <Box className=\"flex w-full justify-center items-center\">\n            {currentStep === CurrentStep.Welcome ? (\n              <WelcomePage\n                message={welcomeMessage}\n                setCurrentStep={setCurrentStep}\n              />\n            ) : currentStep === CurrentStep.Faucet ? (\n              <FaucetPage setCurrentStep={setCurrentStep} />\n            ) : (\n              <SuccessPage message=\"Success!\" />\n            )}\n          </Box>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { Box, Button, Stack } from \"@mui/material\";\nimport {\n  useConnectUI,\n  useConnect,\n  useIsConnected,\n  useWallet,\n  useBalance,\n} from \"@fuels/react\";\nimport { useEffect } from \"react\";\n\nimport { Text } from \"./Text\";\nimport { CurrentStep } from \"./OnboardingTopBar\";\nimport { isSafari } from \"src/utils\";\n\ntype WelcomePageProps = {\n  message?: React.ReactNode;\n  setCurrentStep: (currentStep: CurrentStep) => void;\n};\n\nexport const WelcomePage = ({\n  message,\n  setCurrentStep,\n}: WelcomePageProps) => {\n  const { connect: connectUI } = useConnectUI();\n  const { connect: connectBurner } = useConnect();\n  const {\n    wallet,\n    isLoading: isLoadingWallet,\n    isPending: isPendingWallet,\n    isFetching: isFetchingWallet,\n  } = useWallet();\n  const {\n    balance,\n    isFetching: isFetchingBalance,\n    isPending: isPendingBalance,\n    isLoading: isLoadingBalance,\n  } = useBalance({\n    address: wallet?.address.toString(),\n  });\n  const { isConnected } = useIsConnected();\n\n  const isBalanceLoading =\n    (isFetchingBalance || isPendingBalance || isLoadingBalance);\n  const isWalletLoading =\n    isLoadingWallet || isPendingWallet || isFetchingWallet;\n\n  useEffect(() => {\n    if (isConnected && wallet) {\n      if (balance && balance.gt(0)) {\n        setCurrentStep(CurrentStep.Success);\n      } else if (!isBalanceLoading) {\n        if (isSafari) {\n          const redirectUrl = new URL(\"https://faucet-testnet.fuel.network/\");\n          redirectUrl.searchParams.append(\"address\", wallet.address.toString());\n          redirectUrl.searchParams.append(\"redirectUrl\", window.location.href);\n          window.location.href = redirectUrl.href;\n        } else {\n          setCurrentStep(CurrentStep.Faucet);\n        }\n      }\n    }\n  }, [isConnected, wallet, balance, isBalanceLoading]);\n\n  return (\n    <Stack spacing={3} className=\"w-5/6 items-center\">\n      {message}\n      {isWalletLoading ? (\n        <Text>Loading...</Text>\n      ) : (\n        <>\n          <Button\n            className=\"btn-primary h-12 w-full text-black\"\n            onClick={() => {\n              connectBurner(\"Burner Wallet\");\n            }}\n          >\n            Temporary Wallet\n          </Button>\n          <Box className=\"border-b-2 border-slate-600 w-full\" />\n          <Button\n            variant=\"outlined\"\n            className=\"text-black dark:text-white h-12 w-full border-slate-600\"\n            onClick={() => {\n              connectUI();\n            }}\n          >\n            Connect\n          </Button>\n        </>\n      )}\n    </Stack>\n  );\n};\n","import { Typography, TypographyProps } from \"@mui/material\";\n\nexport type TextProps = TypographyProps;\n\nexport const Text = ({ children, className, ...props }: TextProps) => {\n  return (\n    <Typography {...props} className={`text-black dark:text-white font-sans ${className}`}>\n      {children}\n    </Typography>\n  );\n};\n","import { Box } from \"@mui/material\";\n\nimport { Text } from \"./Text\";\n\nexport enum CurrentStep {\n  Welcome,\n  Faucet,\n  Success,\n}\n\ntype OnboardingTopBarProps = {\n  currentStep: CurrentStep;\n};\n\nexport const OnboardingTopBar = ({ currentStep }: OnboardingTopBarProps) => {\n  return (\n    <Box className=\"flex w-full items-center justify-around\">\n      <Text\n        className={\n          currentStep === CurrentStep.Welcome ? \"\" : \"!text-slate-600\" // TODO: clsx might help remove the need for !\n        }\n      >\n        1. Welcome\n      </Text>\n      <Text\n        className={currentStep === CurrentStep.Faucet ? \"\" : \"!text-slate-600\"}\n      >\n        2. Faucet\n      </Text>\n      <Text\n        className={currentStep === CurrentStep.Success ? \"\" : \"!text-slate-600\"}\n      >\n        3. Success\n      </Text>\n    </Box>\n  );\n};\n","\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n","import { useWallet, useBalance } from \"@fuels/react\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"@mui/material\";\n\nimport { Text } from \"./Text\";\nimport { TESTNET_FAUCET_LINK } from \"../config\";\nimport { CurrentStep } from \"./OnboardingTopBar\";\nimport { useFaucet } from \"src/hooks\";\n\ntype FaucetPageProps = {\n  setCurrentStep: (currentStep: CurrentStep) => void;\n};\n\nconst TOP_UP_AMOUNT = 100_000_000;\n\nexport const FaucetPage = ({ setCurrentStep }: FaucetPageProps) => {\n  const {\n    wallet,\n    isLoading: isLoadingWallet,\n    isPending: isPendingWallet,\n    isFetching: isFetchingWallet,\n  } = useWallet();\n  const {\n    isPending: isPendingBalance,\n    isLoading: isLoadingBalance,\n    isFetching: isFetchingBalance,\n  } = useBalance({ address: wallet?.address.toString() });\n  const { faucetWallet } = useFaucet();\n\n  // @ts-ignore\n  const IS_LOCAL = import.meta.env.VITE_PUBLIC_DAPP_ENVIRONMENT === \"local\";\n\n  const topUpWallet = async () => {\n    if (IS_LOCAL) {\n      if (!faucetWallet) {\n        throw new Error(\"Faucet wallet not found.\");\n      }\n      if (!wallet) {\n        throw new Error(\"Wallet not found.\");\n      }\n\n      const tx = await faucetWallet?.transfer(wallet.address, TOP_UP_AMOUNT);\n      await tx?.waitForResult();\n    }\n  };\n\n  const [className, setClassName] = useState(\"\");\n  const isLoading =\n    isLoadingWallet ||\n    isPendingWallet ||\n    isFetchingWallet ||\n    (!wallet && (isPendingBalance || isLoadingBalance || isFetchingBalance));\n\n  // TODO: fix, this does not work\n  // the gray cloud flare page does not have top margin\n  // the white page does, so we try to remove margin when logo appears\n  useEffect(() => {\n    const logo = document.getElementsByClassName(\"fuel-logo\");\n    if (logo) {\n      setClassName(\"overflow-hidden h-[800px]\");\n    }\n  }, []);\n\n  if (isLoading) return <Text>Loading...</Text>;\n\n  if (!wallet) return <Text>Wallet not found</Text>;\n\n  if (IS_LOCAL) {\n    return (\n      <Button className=\"btn-primary h-12 w-3/4\" onClick={() => topUpWallet()}>\n        Faucet funds\n      </Button>\n    );\n  }\n\n  return (\n    <iframe\n      src={`${TESTNET_FAUCET_LINK}?address=${wallet.address.toAddress()}`}\n      id=\"test\"\n      width=\"100%\"\n      height=\"800px\"\n      className={className}\n    >\n      hello\n    </iframe>\n  );\n};\n","export const TESTNET_FAUCET_LINK = \"https://faucet-testnet.fuel.network/\";\n","import { useMedia } from \"react-use\";\n\nexport const useBreakpoints = () => {\n    const isMobile = useMedia(\"(max-width: 640px)\", false);\n    const isTablet = useMedia(\"(max-width: 768px)\", true);\n\n    return { isMobile, isTablet };\n}\n","import { Provider, Wallet, WalletUnlocked } from \"fuels\";\nimport { useState } from \"react\";\nimport useAsync from \"react-use/lib/useAsync\";\n\nexport const useFaucet = (\n  fuelNodePort: number = 4000,\n  privateKey: string = \"0x01\"\n) => {\n  const [faucetWallet, setFaucetWallet] = useState<WalletUnlocked>();\n\n  useAsync(async () => {\n    if (!faucetWallet) {\n      const provider = await Provider.create(\n        `http://127.0.0.1:${fuelNodePort}/v1/graphql`\n      );\n      const wallet = Wallet.fromPrivateKey(privateKey, provider);\n      setFaucetWallet(wallet);\n    }\n  }, [faucetWallet]);\n\n  return {\n    faucetWallet,\n  };\n};\n","import { Button, Stack } from \"@mui/material\";\nimport { Text } from \"./Text\";\nimport { useOnboardingFlowContext } from \"./OnboardingFlowProvider\";\n\ntype SuccessPageProps = {\n  message?: string;\n};\n\nexport const SuccessPage = ({ message }: SuccessPageProps) => {\n  const { setOpenDialog } = useOnboardingFlowContext();\n  \n  return (\n    <Stack spacing={2} className=\"items-center w-full\">\n      {message && <Text>{message}</Text>}\n      <Button\n        className=\"btn-primary h-12 w-3/4 text-black\"\n        onClick={() => setOpenDialog(false)}\n      >\n        Continue to App\n      </Button>\n    </Stack>\n  );\n};\n","import { createContext, useContext, useState } from \"react\";\nimport { useIsConnected } from \"@fuels/react\";\n\nimport { Toaster } from \"react-hot-toast\";\n\nexport type OnboardingFlowContextType = {\n  openDialog: boolean;\n  setOpenDialog: (open: boolean) => void;\n};\n\nexport const OnboardingFlowContext =\n  createContext<OnboardingFlowContextType | null>(null);\n\nexport const useOnboardingFlowContext = () => {\n  const context = useContext(\n    OnboardingFlowContext\n  ) as OnboardingFlowContextType;\n  if (!context) {\n    throw new Error(\n      \"useOnboardingFlowContext must be used within OnboardingFlowProvider\"\n    );\n  }\n  return context;\n};\n\nexport const OnboardingFlowProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const { isConnected } = useIsConnected();\n  const [openDialog, setOpenDialog] = useState(!isConnected);\n\n  return (\n      <OnboardingFlowContext.Provider value={{ openDialog, setOpenDialog }}>\n        <Toaster />\n        {children}\n      </OnboardingFlowContext.Provider>\n  );\n};\n","import { styled } from \"@mui/material/styles\";\nimport Switch from \"@mui/material/Switch\";\nimport { Stack } from \"@mui/material\";\n\nconst primaryPale = \"#222\";\nconst primaryLight = \"#f0f0f0\";\n\nconst BaseSwitch = styled(Switch)({\n  width: 45,\n  height: 22,\n  padding: 0,\n  display: \"flex\",\n  \"& .MuiSwitch-switchBase\": {\n    padding: 2,\n    \"&.Mui-checked\": {\n      transform: \"translateX(23px)\",\n      \"& + .MuiSwitch-track\": {\n        opacity: 1,\n        backgroundColor: primaryPale,\n      },\n    },\n  },\n  \"& .MuiSwitch-thumb\": {\n    width: 18,\n    height: 18,\n    borderRadius: \"25px\",\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n  },\n  \"& .MuiSwitch-track\": {\n    opacity: 1,\n    borderRadius: \"25px\",\n    backgroundColor: primaryLight,\n    boxSizing: \"border-box\",\n  },\n});\n\nconst SwitchWithIcons = styled(BaseSwitch)({\n  \"& .MuiSwitch-track\": {\n    \"&:before, &:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      transform: \"translateY(-50%)\",\n      width: 16,\n      height: 16,\n      top: 11,\n    },\n    \"&:before\": {\n      left: 3,\n    },\n    \"&:after\": {\n      right: 3,\n    },\n  },\n  \"& .MuiSwitch-thumb:before\": {\n    content: \"''\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    left: 0,\n    top: 0,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n      \"#4c4949\"\n    )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n  },\n  \"& .MuiSwitch-switchBase\": {\n    \"&.Mui-checked\": {\n      \"& .MuiSwitch-thumb:before\": {\n        content: \"''\",\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        left: 0,\n        top: 0,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n          \"#fff\"\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n      },\n    },\n  },\n});\ninterface ThemeToggleProps {\n  isDarkMode: boolean;\n  setIsDarkMode: (darkMode: boolean) => void;\n}\n\nexport const ThemeToggle = ({ isDarkMode, setIsDarkMode }: ThemeToggleProps) => {\n  return (\n    <Stack>\n      <SwitchWithIcons\n        checked={isDarkMode}\n        onChange={() => setIsDarkMode(!isDarkMode)}\n      />\n    </Stack>\n  );\n};\n"],"mappings":"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","names":["Box","Stack","useEffect","useState","Box","jsx","jsx","jsx","jsxs","Box","useWallet","useBalance","useEffect","useState","Button","jsx","useWallet","useBalance","useState","useEffect","Button","Button","Stack","useState","useIsConnected","jsx","jsxs","jsx","jsxs","Stack","Button","useBalance","useWallet","jsx","jsxs","useState","useEffect","Stack","Box","Stack","jsx"]}